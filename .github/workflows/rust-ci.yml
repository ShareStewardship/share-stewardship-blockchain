name: Rust CI

on:
  push:
    branches: [ ss-dag-development ]
  pull_request:
    branches: [ ss-dag-development ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly dependency audit

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check Formatting
        run: cargo fmt -- --check
        working-directory: share_stewardship

      - name: Run Linter (Clippy)
        run: cargo clippy -- -D warnings -A dead_code -A clippy::upper_case_acronyms
        working-directory: share_stewardship

      - name: Build
        run: cargo build --verbose
        working-directory: share_stewardship

      - name: Run DAG Module Unit Tests
        run: cargo test --verbose --package dag_module
        working-directory: share_stewardship

      - name: Run DAG Module Integration Tests
        run: cargo test --tests --verbose --package dag_module
        working-directory: share_stewardship

      - name: Install cargo-tarpaulin
        uses: taiki-e/install-action@cargo-tarpaulin

      - name: Generate DAG Coverage Report
        run: cargo tarpaulin --verbose --workspace --package dag_module --out Xml
        working-directory: share_stewardship

      - name: Upload DAG coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: cobertura.xml

      - name: Verify Codecov upload
        run: echo \"DAG Module coverage report uploaded to Codecov.\"

      - name: Run DAG Tests with All Features (Release)
        run: cargo test --package dag_module --all-features --release
        working-directory: share_stewardship

      - name: Run DAG Benchmarks
        run: cargo bench --package dag_module
        working-directory: share_stewardship

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Security Audit
        run: cargo audit
        working-directory: share_stewardship

      - name: Notify Slack on audit failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,message,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify on Success
        if: success()
        run: echo \"DAG Module build and tests completed successfully.\"

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      security-events: write
    env:
      CODEQL_ENABLE_EXPERIMENTAL_FEATURES: true
    steps:
      - uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: rust

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Slack Notification on CodeQL Analysis Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,message,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
